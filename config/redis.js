////////////////////////////////////////////////////////////////////////////////////////////////////
// Utiliza o módulo redis para criar um cliente do Redis e conecta ao servidor do Redis.
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
// Importações
////////////////////////////////////////////////////////////////////////////////////////////////////
import { createClient } from 'redis'; // Importa o método correto do redis
import 'dotenv/config'; // Importa as variáveis de ambiente
import logger from '../utils/logger.js'; // Importa o módulo logger

////////////////////////////////////////////////////////////////////////////////////////////////////
// Cria o cliente do Redis
////////////////////////////////////////////////////////////////////////////////////////////////////
const client = createClient({
  url: `redis://${process.env.REDIS_HOST || '127.0.0.1'}:${process.env.REDIS_PORT || 6379}` // URL do servidor Redis
});

////////////////////////////////////////////////////////////////////////////////////////////////////
// Evento de erro
////////////////////////////////////////////////////////////////////////////////////////////////////
client.on('error', (err) => {
  logger.error(`redis.js-> Erro na conexão com o Redis: ${err.message}`, { stack: err.stack }); // Loga o erro
});

////////////////////////////////////////////////////////////////////////////////////////////////////
// Conectar ao Redis
////////////////////////////////////////////////////////////////////////////////////////////////////
client.connect().then(() => {
  logger.info('redis.js-> Conectado ao servidor Redis'); // Loga a mensagem de sucesso
});

export default client; // Exporta o cliente do Redis

////////////////////////////////////////////////////////////////////////////////////////////////////