////////////////////////////////////////////////////////////////////////////////////////////////////
// Utiliza o módulo redis para criar um cliente do Redis e conecta ao servidor do Redis.
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
// Importações
////////////////////////////////////////////////////////////////////////////////////////////////////
import redis from 'redis'; // Importa o módulo redis
import 'dotenv/config'; // Carrega variáveis de ambiente do arquivo .env
import logger from '../utils/logger.js'; // Importa o módulo logger

////////////////////////////////////////////////////////////////////////////////////////////////////
// Cria um cliente do Redis
////////////////////////////////////////////////////////////////////////////////////////////////////
const client = redis.createClient({
  host: process.env.REDIS_HOST || 'localhost', // Endereço do servidor Redis
  port: process.env.REDIS_PORT || 6379, // Porta do servidor Redis
});

////////////////////////////////////////////////////////////////////////////////////////////////////
// Evento de erro de conexão com o Redis
////////////////////////////////////////////////////////////////////////////////////////////////////
client.on('error', (err) => {
  logger.error(`Erro na conexão com o Redis: ${err.message}`, { stack: err.stack }); // Exibe o erro no console
});

////////////////////////////////////////////////////////////////////////////////////////////////////
// Conectar ao Redis
////////////////////////////////////////////////////////////////////////////////////////////////////
client.connect().then(() => {
  logger.info('Conectado ao servidor Redis'); // Exibe a mensagem de conexão bem-sucedida
});

export default client; // Exporta o cliente do Redis

////////////////////////////////////////////////////////////////////////////////////////////////////